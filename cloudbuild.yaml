steps:
  # Build the container image
  - id: "build image"
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "${_IMAGE_NAME}:$COMMIT_SHA",
        ".",
      ]

  # Push the container image to Container Registry
  - id: "push image"
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "${_IMAGE_NAME}:$COMMIT_SHA"
      ]

  # Apply the latest migrations
  - id: "apply migrations"
    name: "gcr.io/google-appengine/exec-wrapper"
    args:
      [
        "-i", "${_IMAGE_NAME}:$COMMIT_SHA",
        "-s", "${_CLOUDSQL_INSTANCE_CONNECTION_NAME}",
        "-e", "DJANGO_SETTINGS_MODULE=config.settings.production",
        "-e", "GOOGLE_CLOUD_PROJECT=$PROJECT_ID",
        "-e", "SETTINGS_NAME=${_SETTINGS_NAME}",
        "--", "python", "/app/manage.py", "migrate",
      ]

  # Create cache table
  - id: "create cache table"
    name: "gcr.io/google-appengine/exec-wrapper"
    args:
      [
        "-i", "${_IMAGE_NAME}:$COMMIT_SHA",
        "-s", "${_CLOUDSQL_INSTANCE_CONNECTION_NAME}",
        "-e", "DJANGO_SETTINGS_MODULE=config.settings.production",
        "-e", "GOOGLE_CLOUD_PROJECT=$PROJECT_ID",
        "-e", "SETTINGS_NAME=${_SETTINGS_NAME}",
        "--", "python", "/app/manage.py", "createcachetable",
      ]

  # Collect static files
  - id: "collect static files"
    name: "gcr.io/google-appengine/exec-wrapper"
    args:
      [
        "-i", "${_IMAGE_NAME}:$COMMIT_SHA",
        "-s", "${_CLOUDSQL_INSTANCE_CONNECTION_NAME}",
        "-e", "DJANGO_SETTINGS_MODULE=config.settings.production",
        "-e", "GOOGLE_CLOUD_PROJECT=$PROJECT_ID",
        "-e", "SETTINGS_NAME=${_SETTINGS_NAME}",
        "--", "python", "/app/manage.py", "collectstatic", "--noinput"
      ]

  # Compress static assets
  - id: "compress static assets"
    name: "gcr.io/google-appengine/exec-wrapper"
    args:
      [
        "-i", "${_IMAGE_NAME}:$COMMIT_SHA",
        "-s", "${_CLOUDSQL_INSTANCE_CONNECTION_NAME}",
        "-e", "DJANGO_SETTINGS_MODULE=config.settings.production",
        "-e", "GOOGLE_CLOUD_PROJECT=$PROJECT_ID",
        "-e", "SETTINGS_NAME=${_SETTINGS_NAME}",
        "--", "python", "/app/manage.py", "compress"
      ]

  # Get credentials for the cluster
  - id: "get credentials for the cluster"
    name: "gcr.io/cloud-builders/kubectl"
    env:
      - CLOUDSDK_CORE_PROJECT=$PROJECT_ID
      - CLOUDSDK_COMPUTE_ZONE=${_GKE_COMPUTE_ZONE}
      - CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}
      - KUBECONFIG=/workspace/.kube/config
    args:
      - cluster-info

  # Show kubernetes manifest
  - id: "show kubernetes manifest"
    dir: "deploy"
    name: "gcr.io/$PROJECT_ID/helm:3.7.0"
    env:
      - KUBECONFIG=/workspace/.kube/config
    args:
      - template
      - ${_APP_NAME}-${_DEPLOYMENT_TYPE}
      - --namespace=${_NAMESPACE}
      - --values
      - values.yaml
      - --set
      - image.repository=${_IMAGE_NAME}
      - --set
      - image.tag=$COMMIT_SHA
      - --set
      - namespace=${_NAMESPACE}
      - --set
      - env.secret.app_settings_path=${_POD_APP_SETTINGS_PATH}
      - --set
      - networking.ingress.domain=${_DOMAIN_NAME}
      - --set
      - networking.ingress.static_ip_name=${_STATIC_IP_NAME}
      - --set
      - roles.cluster_role.name=${_CLUSTER_ROLE_NAME}
      - --set
      - roles.service_account.iam_account=${_IAM_SERVICE_ACCOUNT}
      - --set
      - roles.service_account.k8ts_account=${_K8TS_SERVICE_ACCOUNT}
      - --set
      - env.db.cloudsql_connection_instance=${_CLOUDSQL_INSTANCE_CONNECTION_NAME}
      - .


  # Update essential variables and Deploy to cluster
  - id: "update essential variables and start deployment to cluster"
    dir: "deploy"
    name: "gcr.io/$PROJECT_ID/helm:3.7.0"
    env:
      - KUBECONFIG=/workspace/.kube/config
    args:
      - upgrade
      - --install
      - ${_APP_NAME}-${_DEPLOYMENT_TYPE}
      - --namespace=${_NAMESPACE}
      - --values
      - values.yaml
      - --set
      - image.repository=${_IMAGE_NAME}
      - --set
      - image.tag=$COMMIT_SHA
      - --set
      - namespace=${_NAMESPACE}
      - --set
      - env.secret.app_settings_path=${_POD_APP_SETTINGS_PATH}
      - --set
      - networking.ingress.domain=${_DOMAIN_NAME}
      - --set
      - networking.ingress.static_ip_name=${_STATIC_IP_NAME}
      - --set
      - roles.cluster_role.name=${_CLUSTER_ROLE_NAME}
      - --set
      - roles.service_account.iam_account=${_IAM_SERVICE_ACCOUNT}
      - --set
      - roles.service_account.k8ts_account=${_K8TS_SERVICE_ACCOUNT}
      - --set
      - env.db.cloudsql_connection_instance=${_CLOUDSQL_INSTANCE_CONNECTION_NAME}
      - .

images:
  - "${_IMAGE_NAME}:$COMMIT_SHA"

timeout: 1200s
queueTtl: 3600s
