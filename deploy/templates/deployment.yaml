apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      serviceAccountName: {{ .Values.roles.service_account.k8ts_account }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: Always
          ports:
            - name: http
              protocol: TCP
              containerPort: {{ .Values.image.containerPort }}
          envFrom:
            - configMapRef:
                name: app-settings
          env:
            - name: ENV_PATH
              value: {{ .Values.env.secret.app_settings_path }}
            - name: PORT
              value: "8080"

            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: database
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password

        #  start cloudsql proxy container. use `workload identity approach`
        - name: cloud-sql-proxy
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.1.0
          args:
            - "--structured-logs"
            - "--port=5432"
            - "{{ .Values.env.db.cloudsql_connection_instance }}"
          securityContext:
            runAsNonRoot: true
          volumeMounts:
            - name: cloudsql-db-credentials
              mountPath: /cloudsql-db-credentials
            - name: app-settings
              mountPath: /secrets/app-settings
              readOnly: true

      volumes:
        - name: app-settings
          configMap:
            name: app-settings
        - name: cloudsql-db-credentials
          emptyDir: { }