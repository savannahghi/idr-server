# Generated by Django 4.0.4 on 2022-06-26 19:30

import apps.dashboards.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Visualization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='A descriptive title for this visualization.', max_length=200)),
                ('description', models.TextField(blank=True, default='')),
                ('source', models.URLField(help_text='The url to the source of this visualization. E.g A url to a Power Bi dashboard.', max_length=255, verbose_name='Visualization source')),
                ('width', models.DecimalField(decimal_places=2, default=Decimal('400.00'), help_text="The width that the visualization should have in pixels once it's rendered.", max_digits=6)),
                ('height', models.DecimalField(decimal_places=2, default=Decimal('300.00'), help_text="The height that the visualization should have in pixels once it's rendered.", max_digits=6)),
                ('weight', models.SmallIntegerField(blank=True, default=0, help_text='This indicates the importance of this visualization within a dashboard. Visualizations with higher weights/precedence should generally be displayed before those with lower weights but dashboards renders can choose to ignore these values and layout the visualizations however they see fit.', verbose_name='Weight/Precedence')),
                ('metadata', models.JSONField(blank=True, default=apps.dashboards.models._default_visualization_attrs_factory, verbose_name='Metadata and attributes to append to the rendered visualizations. These attributes are added as html element attributes to the rendered iframe (Should be a dict).')),
                ('is_published', models.BooleanField(default=False, help_text='This flag indicates whether a visualization is ready for consumption by the stakeholders/users.')),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-updated_at', '-created_at'),
                'get_latest_by': ('-updated_at', '-created_at'),
                'abstract': False,
            },
            managers=[
                ('objects', apps.dashboards.models.VisualizationManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='A descriptive title for this dashboard.', max_length=200)),
                ('description', models.TextField(blank=True, default='')),
                ('layout', models.CharField(choices=[('free', 'Free Layout'), ('none', 'Not Specified')], default='none', max_length=15)),
                ('weight', models.SmallIntegerField(blank=True, default=0, help_text='This indicates the importance of this dashboard. Dashboards with higher weights/precedence should generally be displayed before those with lower weights.', verbose_name='Weight/Precedence')),
                ('is_published', models.BooleanField(default=False, help_text="This flag indicates whether a dashboard and it's visualizations are ready for consumption by the stakeholders/users.")),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
                ('visualizations', models.ManyToManyField(to='dashboards.visualization')),
            ],
            options={
                'ordering': ('-updated_at', '-created_at'),
                'get_latest_by': ('-updated_at', '-created_at'),
                'abstract': False,
            },
            managers=[
                ('objects', apps.dashboards.models.DashboardManager()),
            ],
        ),
    ]
