# Generated by Django 4.0.4 on 2022-06-09 09:27

import apps.core.models
import apps.sql_data.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataSourceVersion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_source_version', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, default='')),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-updated_at', '-created_at'),
                'get_latest_by': ('-updated_at', '-created_at'),
                'abstract': False,
            },
            managers=[
                ('objects', apps.core.models.AuditBaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='SQLDatabaseSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, default='')),
                ('database_name', models.CharField(help_text='This is a hint as to the source database to use. Since it might not always be possible to know the exact name of the source database, as this might be configuration dependent, this should be thought of as a hint to the client on the database to use for the extraction.', max_length=255)),
                ('database_vendor', models.CharField(choices=[('mysql', 'MySQL'), ('postgres', 'Postgres SQL')], default='mysql', max_length=20)),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-updated_at', '-created_at'),
                'get_latest_by': ('-updated_at', '-created_at'),
                'abstract': False,
            },
            managers=[
                ('objects', apps.core.models.AuditBaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='SQLExtractMetadata',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('version', models.CharField(help_text='The version of this metadata.', max_length=100)),
                ('description', models.TextField(blank=True, default='')),
                ('preferred_uploads_name', models.CharField(blank=True, help_text='A name that all uploads relating to this extract should have or be grouped by. Note that the final name is dependent on the upload metadata implementation in use and thus this is more of a hint(to upload metadata implementations) of a suitable name to use.', max_length=200, null=True)),
                ('sql_query', models.TextField(help_text='The actual SQL statement to be run against a database to retrieve data. Should be a valid SQL DML statement for the target database.')),
                ('extras', models.JSONField(blank=True, default=dict, help_text='Extra metadata.')),
                ('applicable_source_versions', models.ManyToManyField(to='sql_data.datasourceversion', verbose_name='Applicable data source versions')),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('data_source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sql_data.sqldatabasesource')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Sql extract metadata',
                'ordering': ('-updated_at', '-created_at'),
                'get_latest_by': ('-updated_at', '-created_at'),
                'abstract': False,
            },
            managers=[
                ('objects', apps.core.models.AuditBaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='SQLUploadMetadata',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('made_on', models.DateTimeField(auto_now_add=True)),
                ('chunks', models.PositiveIntegerField(default=1, help_text='The number of chunks contained in this upload.')),
                ('org_unit_code', models.CharField(help_text='This is a code representing the location from which this upload was made. E.g, an MFL code for facilities in Kenya.', max_length=150)),
                ('org_unit_name', models.CharField(help_text='A human-readable name for the location from which this upload was made. E.g, the name of a facility.', max_length=250)),
                ('content_type', models.CharField(choices=[('text/csv', 'CSV'), ('application/json', 'JSON'), ('application/vnd.ms-excel', 'MS Excel'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'MS Excel 2007 and Later'), ('application/vnd.apache-parquet', 'Parquet')], max_length=100)),
                ('is_consumed', models.BooleanField(blank=True, default=False, editable=False, help_text="Indicates that the concerned parties have received the uploaded data, and it's safe for the server to clear out the uploaded files(should it choose to) for efficiency reasons.")),
                ('extras', models.JSONField(blank=True, default=dict, help_text='Extra metadata.')),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('extract_metadata', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sql_data.sqlextractmetadata')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Sql upload metadata',
                'ordering': ('-updated_at', '-created_at'),
                'get_latest_by': ('-updated_at', '-created_at'),
                'abstract': False,
            },
            managers=[
                ('objects', apps.core.models.AuditBaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='SQLUploadChunk',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_time', models.DateTimeField(auto_now_add=True, help_text='The time the upload of this chunk commenced.')),
                ('finish_time', models.DateTimeField(blank=True, help_text='The completion time of the upload this chunk. An upload will only be considered complete once this value is non-null.', null=True)),
                ('chunk_index', models.PositiveIntegerField()),
                ('chunk_content', models.FileField(blank=True, max_length=4096, null=True, upload_to=apps.sql_data.models.sql_extracts_upload_to)),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
                ('upload_metadata', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sql_data.sqluploadmetadata')),
            ],
            options={
                'ordering': ('-updated_at', '-created_at'),
                'get_latest_by': ('-updated_at', '-created_at'),
                'abstract': False,
            },
            managers=[
                ('objects', apps.core.models.AuditBaseManager()),
            ],
        ),
        migrations.AddField(
            model_name='datasourceversion',
            name='data_source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sql_data.sqldatabasesource'),
        ),
        migrations.AddField(
            model_name='datasourceversion',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_updated_by', to=settings.AUTH_USER_MODEL),
        ),
    ]
