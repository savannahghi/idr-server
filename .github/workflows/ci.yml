name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_BUILDKIT: 1 # Enable Buildkit and let compose use it to speed up image building
  COMPOSE_DOCKER_CLI_BUILD: 1
  DJANGO_DEBUG: true
  DJANGO_SECRET_KEY: "${{ secrets.DJANGO_SECRET_KEY }}"
  USE_DOCKER: no
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5432
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  GOOGLE_APPLICATION_CREDENTIALS: "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}"
  DJANGO_GCP_STORAGE_BUCKET_NAME: "${{ secrets.DJANGO_GCP_STORAGE_BUCKET_NAME }}"
  GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  DJANGO_EMAIL_BACKEND: "${{ secrets.DJANGO_EMAIL_BACKEND }}"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.9", "3.10"]
    
    # Service containers to run with `container-job`
    services:
      postgres:
        image: postgis/postgis:13-3.1
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Requirements
      run: |
        sudo apt-get update
        sudo apt-get install postgis gdal-bin libgdal-dev
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        npm ci

    - name: Setup Django
      run: |
        python manage.py migrate
        python manage.py collectstatic --noinput
